name: Build Production
'on':
  push:
    branches:
      - develop
jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Grand execute permissions to gradlew
        run: chmod +x gradlew
      - name: Run Linters and Test
        run: ./gradlew check
  build:
    name: Build Signed AAB
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3
      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Setup Gradle Cache
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
      - name: Bump version
        uses: chkfung/android-version-actions@v1.2.2
        with:
          gradlePath: app/build.gradle.kts
          versionCode: '${{github.run_number}}'
          versionName: 1.0.0

      - name: Restore keystore.jks
        run: echo "${{secrets.KEYSTORE}}" | base64 -d > "${{ secrets.KEYSTORE_PATH }}"

      - name: Generate keystore.properties
        run: |
          cat <<EOF > keystore.properties
          storePassword:${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword:${{ secrets.APP_NAME_KEY_PASSWORD }}
          keyAlias:${{ secrets.APP_NAME_KEY }}
          storeFile:${{ secrets.KEYSTORE_PATH }}
          EOF

      - name: Build prodRelease
        run: ./gradlew
          -PKEYSTORE_FILE="${{ secrets.KEYSTORE_PATH }}"
          -PKEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
          -PSIGNING_KEY_ALIAS=${{ secrets.APP_NAME_KEY }}
          -PSIGNING_KEY_PASSWORD=${{ secrets.APP_NAME_KEY_PASSWORD }}
          app:bundleRelease

      - name: Upload app bundle as artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-bundle
          path: app/build/outputs/bundle/release/app-release.aab
      - run: 'echo Build status report=${{ job.status }}'
      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: Test-Reports
          path: app/build/reports
        if: always()